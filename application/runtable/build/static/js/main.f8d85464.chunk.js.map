{"version":3,"sources":["App.tsx","index.tsx"],"names":["TopBar","styled","div","Logo","Top","Body","SideBar","SideBlock","BoxContent","BoxInside","Button","button","ButtonSubmit","ButtonContent","Content","ContentInside","HeadContentName","TableHeader","TableType","TableColumn","DivWidth","DivName","InputName","input","InputWidth","App","useState","tables","setTables","style","color","width","height","marginRight","marginBottom","console","log","length","running","map","table","day","index","value","name","onChange","event","e","id","newArr","i","target","onChangeName","run","distant","j","onChangeNumber","total","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8d85464.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { FaRunning } from 'react-icons/fa';\nimport { FcMenu } from 'react-icons/fc';\nimport { BsTable } from 'react-icons/bs';\nimport { AiFillSignal } from 'react-icons/ai';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\n\nconst TopBar = styled.div`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #E9EAEE;\n`;\n\nconst Logo = styled.div`\n  width: 100px;\n  height: 100%;\n  border-right: 1px solid #E9EAEE;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Top = styled.div`\n  width: 100px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Body = styled.div`\n  display: flex;\n  width: 100%;\n  background-color: #EEF2F5;\n  position: fixed;\n`;\n\nconst SideBar = styled.div`\n  width: 100px;\n  height: 95vh;\n  background-color: #374C70;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst SideBlock = styled.div`\n  background-color: #304262;\n  margin-top: 14px;\n  width: 72px;\n  height: 80px;\n  padding-right: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-left: 4px solid #00B6E6;\n`;\n\nconst BoxContent = styled.div`\n  margin-left: 100px;\n  width: 100%;\n  height: 93vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BoxInside = styled.div`\n  width: 90%;\n  height: 80%;\n`;\n\nconst Button = styled.button`\n  border-color: transparent;\n  width: 155px;\n  height: 35px;\n  border-radius: 3px;\n  background-color: #00B6E6;\n  margin-left: 10px;\n`;\n\nconst ButtonSubmit = styled.button`\n  border-color: transparent;\n  width: 155px;\n  height: 35px;\n  border-radius: 3px;\n  background-color: rgb(0, 182, 230);\n  margin-top: 7px;\n  color: white;\n`;\n\nconst ButtonContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  &:hover {\n    \n  }\n`;\n\nconst Content = styled.div`\n  background-color: #ffffff;\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  /* padding: 16px 20px 16px 20px; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ContentInside = styled.div`\n  overflow: scroll;\n  width: 100%;\n  height: 90%;\n`;\n\nconst HeadContentName = styled.div`\n  margin-top: 25px;\n  margin-bottom: 15px;\n`;\n\nconst TableHeader = styled.div`\n  padding: 16px 20px 16px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  border-bottom: 1px solid #E9EAEE;\n`;\n\nconst TableType = styled.div`\n  align-items: center;\n  padding: 0px 20px;\n  display: flex;\n  height: 49px;\n  border-bottom: 1px solid #E9EAEE;\n`;\n\nconst TableColumn = styled.div`\n  margin-right: 30px;\n`;\n\nconst DivWidth = styled.div`\n  width: 60px;\n  /* justify-content: center;\n  display: flex; */\n`;\n\nconst DivName = styled.div`\n  width: 100px;\n  /* justify-content: center;\n  display: flex; */\n`;\n\nconst InputName = styled.input`\n  width: 92px;\n  font-size: 16px;\n  border-color: transparent;\n`;\n\nconst InputWidth = styled.input`\n  width: 28px;\n  font-size: 16px;\n  border-color: transparent;\n`;\n\ninterface Table {\n  id: number,\n  name: string,\n  running: { id: number, day: number, distant: number }[],\n  total: number,\n};\n\nfunction App() {\n  // const API_HOST = 'http://localhost:8000/';\n  // const [tables, setTables] = useState<Table[]>([]);\n\n  // useEffect(() => {\n  //   fetch(`${API_HOST}runner/`, {\n  //     method: 'GET',\n  //   }).then(response => response.json())\n  //     .then(data => {\n  //       setTables(data);\n  //     });\n  // }, []);\n\n  const [tables, setTables] = useState<Table[]>([\n    {\n        \"id\": 1,\n        \"name\": \"Alex\",\n        \"running\": [\n            {\n                \"id\": 1,\n                \"day\": 1,\n                \"distant\": 10\n            },\n            {\n                \"id\": 4,\n                \"day\": 2,\n                \"distant\": 30\n            },\n            {\n                \"id\": 7,\n                \"day\": 3,\n                \"distant\": 0\n            }\n        ],\n        \"total\": 40\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Harmon\",\n        \"running\": [\n            {\n                \"id\": 2,\n                \"day\": 1,\n                \"distant\": 5\n            },\n            {\n                \"id\": 5,\n                \"day\": 2,\n                \"distant\": 0\n            },\n            {\n                \"id\": 8,\n                \"day\": 3,\n                \"distant\": 15\n            }\n        ],\n        \"total\": 20\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Benny\",\n        \"running\": [\n            {\n                \"id\": 3,\n                \"day\": 1,\n                \"distant\": 20\n            },\n            {\n                \"id\": 6,\n                \"day\": 2,\n                \"distant\": 2\n            },\n            {\n                \"id\": 9,\n                \"day\": 3,\n                \"distant\": 7\n            }\n        ],\n        \"total\": 29\n    }\n]);\n\n  const onChangeName = (e: any, id: number) => {\n    var newArr = [...tables];\n    for (var i in newArr) {\n      if (newArr[i].id === id) {\n        newArr[i].name = e.target.value;\n        break;\n      };\n    };\n    setTables(newArr);\n  }\n\n  const onChangeNumber = (e: any, id: number) => {\n    var newArr = [...tables];\n    for (var i in newArr) {\n      for (var j in newArr[i].running) {\n        if (newArr[i].running[j].id === id) {\n          newArr[i].running[j].distant = e.target.value;\n          break;\n        };\n      }\n    };\n    setTables(newArr);\n  }\n\n  const Test = () => {\n    // var day = 0;\n    // for (var i in tables[0].running) {\n    //   day <= tables[0].running[i].day ? day = tables[0].running[i].day : day = day;\n    // }\n  }\n\n  return (\n    <div>\n      <TopBar>\n        <Logo>\n          <FaRunning style={{ color: \"#374C70\", width: \"28px\", height: \"auto\", marginRight: \"8px\" }} />\n          <FcMenu style={{ color: \"#9BB1DB\", width: \"20px\", height: \"auto\" }} />\n        </Logo>\n        <Top>Run Table</Top>\n        <Top></Top>\n      </TopBar>\n      <Body>\n        <SideBar>\n          <SideBlock>\n            <BsTable style={{ color: \"#00B6E6\", width: \"25px\", height: \"auto\", marginBottom: \"5px\" }} />\n            <div style={{ color: \"#00B6E6\" }}>Tables</div>\n          </SideBlock>\n          <SideBlock >\n            <AiFillSignal style={{ color: \"#90A3BD\", width: \"25px\", height: \"auto\", marginBottom: \"5px\" }} />\n            <div style={{ color: \"#90A3BD\" }}>Ranking</div>\n          </SideBlock>\n        </SideBar>\n        <BoxContent>\n          <BoxInside>\n            <HeadContentName>\n              <BsTable />\n              <div>Tables</div>\n            </HeadContentName>\n            <Content>\n              <ContentInside>\n                <div>\n                  <TableHeader>\n                    <div>name table</div>\n                    <div>\n                      <Button>\n                        <ButtonContent>\n                          <IoMdAddCircleOutline style={{ color: \"white\" }} />\n                          <div>add runner</div>\n                        </ButtonContent>\n                      </Button>\n                      <Button>\n                        <ButtonContent>\n                          <IoMdAddCircleOutline style={{ color: \"white\" }} />\n                          <div>add day</div>\n                        </ButtonContent>\n                      </Button>\n                    </div>\n                  </TableHeader>\n                  <TableType>\n                    <TableColumn><div style={{ width: \"25px\" }}>No.</div></TableColumn>\n                    <TableColumn><DivName>Name</DivName></TableColumn>\n                    {console.log(tables)}\n\n                    {tables.length !== 0 && tables[0].running.map(table =>\n                      <TableColumn><DivWidth>Day {table.day}</DivWidth></TableColumn>\n                    )}\n                    <TableColumn><DivWidth>Total</DivWidth></TableColumn>\n                  </TableType>\n                  {tables.map((table, index) =>\n                    <TableType>\n                      <TableColumn><div style={{ width: \"25px\" }}>{index + 1}</div></TableColumn>\n                      <TableColumn><InputName value={table.name} onChange={(event: any) => onChangeName(event, table.id)}></InputName></TableColumn>\n                      {table.running.map((run) =>\n                        <TableColumn><InputWidth value={run.distant} onChange={(e: any) => onChangeNumber(e, run.id)}></InputWidth>KM</TableColumn>\n                      )}\n                      <TableColumn><DivWidth>{table.total} KM</DivWidth></TableColumn>\n                    </TableType>\n                  )}\n\n\n                </div>\n              </ContentInside>\n              <ButtonSubmit onClick={() => Test()}>Submit</ButtonSubmit>\n            </Content>\n          </BoxInside>\n        </BoxContent>\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}